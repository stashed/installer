// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// installer.stash.appscode.com_stashoperators.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _installerStashAppscodeCom_stashoperatorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xff\x8f\xdc\xb6\x72\xff\xdd\x7f\xc5\xe0\x5a\xc0\x77\xc5\xee\x3a\xee\x2b\x1e\xda\x4b\x90\xe2\x9e\xed\x04\x6e\x1c\xc7\xc8\xb9\x49\xd1\xe0\xb5\xe0\x4a\xb3\xbb\x7c\x27\x91\x0a\x49\xed\x65\xf3\xf0\xfe\xf7\x82\x5f\xf4\x5d\xa2\xa8\xbd\x3b\xa7\x69\xc9\x5f\xec\x15\xa5\xd1\x70\x66\x38\x1c\x7e\x86\xa3\x23\x05\xfd\x01\x85\xa4\x9c\x5d\x03\x29\x28\xfe\xa2\x90\xe9\x5f\x72\x73\xf7\xcf\x72\x43\xf9\x8b\xe3\xcb\x2d\x2a\xf2\xf2\xd9\x1d\x65\xe9\x35\xbc\x2a\xa5\xe2\xf9\xf7\x28\x79\x29\x12\x7c\x8d\x3b\xca\xa8\xa2\x9c\x3d\xcb\x51\x91\x94\x28\x72\xfd\x0c\x20\x11\x48\xf4\xc5\x8f\x34\x47\xa9\x48\x5e\x5c\x03\x2b\xb3\xec\x19\x40\x46\xb6\x98\x49\x7d\x0f\x00\x29\x8a\x6b\x90\x8a\xc8\xc3\x33\x00\x46\x72\x74\xbf\x78\x81\x82\x28\x2e\xe4\x86\x32\xa9\x48\x96\xa1\xd8\x98\x8e\x0d\x29\x0a\x99\xf0\x14\x37\x09\xcf\x9f\xc9\x02\x13\x4d\x88\xa4\xa9\xe1\x80\x64\x1f\x04\x65\x0a\xc5\x2b\x9e\x95\x39\x33\x2f\x59\xc3\xbf\xdd\x7e\xf7\xfe\x03\x51\x87\x6b\xd8\xe8\x07\x36\x47\x3b\x56\xc3\x80\x7d\xe7\x0f\xad\x2b\xea\x54\x18\x2e\x04\x65\xfb\xd1\xc7\xd3\xed\x86\xe6\x64\x8f\xad\xe7\x5f\xff\xe9\xbf\xdf\x7e\x7b\xf3\xf5\x9b\x40\x02\x58\x08\x4c\x88\xc2\xb4\x4d\xa2\x7b\xd1\x12\xd9\x72\x9e\x21\x61\x7d\x2a\x95\x9c\x37\x03\x21\xb7\x08\xde\x38\x0e\x2d\xa5\x94\x28\xfd\x73\x2f\x78\x59\x5c\x83\x57\xa8\x96\x80\x53\x90\xe6\x68\xcf\x05\xad\x7e\xaf\x6b\x6d\xe9\xff\x57\xcf\x99\x9f\xd6\x38\x6e\x75\xf7\x77\x4e\x7d\xe6\x7a\x46\xa5\xfa\x66\xd8\xf7\x8e\x4a\x65\xfa\x8b\xac\x14\x24\xeb\x2b\xde\x74\x49\xca\xf6\x65\x46\x44\xaf\xf3\x19\x40\x21\x50\xa2\x38\xe2\xbf\xb3\x3b\xc6\xef\xd9\x57\x14\xb3\x54\x5e\xc3\x8e\x64\x52\x73\x23\x13\xae\x47\xfd\x2a\x2b\xa5\x42\x7d\xbf\x2c\xb7\xc2\x19\xac\xbc\x86\xbf\xfe\xed\x19\xc0\x91\x64\x34\x35\xe2\xb3\x43\xe3\x05\xb2\x9b\x0f\x6f\x7f\xf8\xc3\x6d\x72\xc0\x9c\xd8\x8b\xfa\x4d\xfa\xb5\xaa\x96\x80\x35\xdb\x7a\xc2\xd4\xd7\x00\x52\x94\x89\xa0\x85\xa1\x08\xcf\x35\x29\x7b\x0f\xa4\x7a\x8a\xa0\x04\x75\x40\x70\xc6\x87\x29\x48\xf3\x1a\xe0\x3b\x50\x07\x2a\x41\xa0\x19\x13\x53\x86\xa5\x16\x59\xd0\xb7\x10\x06\x7c\xfb\x17\x4c\xd4\x06\x6e\xf5\xb8\x85\x04\x79\xe0\x65\x96\x42\xc2\xd9\x11\x85\x02\x81\x09\xdf\x33\xfa\x6b\x4d\x59\x82\xe2\xe6\x95\x19\x51\xe8\x64\x5d\x35\x33\x49\x18\xc9\xb4\x10\x4a\x5c\x01\x61\x29\xe4\xe4\x04\x02\xf5\x3b\xa0\x64\x2d\x6a\xe6\x16\xb9\x81\x6f\xb9\x40\xa0\x6c\xc7\xaf\xe1\xa0\x54\x21\xaf\x5f\xbc\xd8\x53\x55\xb9\x88\x84\xe7\x79\xc9\xa8\x3a\xbd\x48\x38\x53\x82\x6e\x4b\xad\xc5\x17\x29\x1e\x31\x7b\x21\xe9\x7e\x4d\x44\x72\xa0\x0a\x13\x55\x0a\x7c\x41\x0a\xba\x36\x8c\x33\x65\xfc\x4c\x9e\xfe\x5d\xad\x9e\xe7\x2d\x4e\x7b\x73\xc9\x36\x63\x68\x93\x72\xd7\xa6\x06\x54\x02\x71\x8f\x59\xfe\x1b\xf1\xea\x4b\x5a\x2a\xdf\xbf\xb9\xfd\x08\xd5\x4b\x8d\x0a\xba\x32\x37\xd2\x6e\x1e\x93\x8d\xe0\xb5\xa0\x28\xdb\xa1\xb0\x8a\xdb\x09\x9e\x1b\x8a\xc8\xd2\x82\x53\xa6\xcc\x8f\x24\xa3\xc8\xba\x42\x97\xe5\x36\xa7\x4a\x6b\xfa\xe7\x12\xa5\xd2\xfa\xd9\xc0\x2b\xc2\x18\x57\xb0\x45\x28\x0b\x3d\x49\xd3\x0d\xbc\x65\xf0\x8a\xe4\x98\xbd\x22\x12\x9f\x5c\xec\x5a\xc2\x72\xad\x45\x3a\x2f\xf8\xb6\x7f\xaf\xda\xd8\xf4\xa8\x9d\x50\xe7\x0a\x40\x4e\x7e\x79\x87\x6c\xaf\x7d\xd8\x1f\xff\xd0\xeb\x2b\x88\xd2\x26\x79\x0d\xff\xf5\x13\x59\xff\xfa\xe7\xcb\x9f\xd6\x64\xfd\xeb\x67\xeb\x7f\xf9\xf3\x3f\xfc\xe4\xfe\x73\xf5\xaf\x7f\xdf\x7b\x66\x94\xc9\xea\xb2\x55\x60\x7d\xb9\x5a\x2a\x46\x8d\xa6\xe3\x98\x6e\x0b\x4c\xb4\x01\x69\x2d\xea\xa7\x60\xc7\x05\x08\x4c\xa9\x84\xf6\xca\xe1\x1f\xbe\x9d\x34\x7d\x01\x4c\xdd\xad\x5b\x6b\x0d\xe3\xe9\x2d\x26\xa5\xa0\xea\xf4\x81\x67\x34\x19\xbd\x1d\x80\x2a\xcc\x47\x3b\x26\x05\xd3\xed\x26\x42\x90\xd3\x90\x8d\x9d\x59\xce\x4f\x63\x84\x3b\x32\x7b\xbb\x33\xd2\xa1\x3b\x8a\xe9\xca\x08\xab\xe0\xe9\x73\x69\x9c\x4f\x5a\x66\x7a\x9a\x25\x9c\x49\x25\x08\x65\x4a\x8e\x50\xf3\x09\x43\x37\xc6\x53\xbc\xf1\x70\x33\xe0\xe8\xb5\xf9\xb1\x45\x69\x1e\xad\x47\xd2\xe6\x48\x94\x19\x4a\xa3\x50\x75\xc0\x09\x9a\xa0\x07\xb2\x99\xe8\x9c\x63\xda\xde\x83\x3b\x14\x02\xd3\xd7\xa5\x56\xc0\x6d\xfd\xfa\xb7\x7b\xc6\xeb\xcb\x6f\x7e\xc1\xa4\x54\xbd\x25\xc4\x3b\xbe\x8f\xda\x20\x2d\x31\x14\x70\x4f\xb3\xcc\xbd\x4a\x3b\xfa\xaa\x43\x33\x3f\x26\xed\xa6\x29\x6e\xe4\xa3\x0d\x9c\x28\x90\x44\x51\xb9\x3b\x19\x05\xd6\x12\xc3\x5f\xb4\xd7\x33\x21\x60\xa3\x64\x2f\xd1\xed\xc9\x39\x43\xbd\x10\xaf\x60\x5b\x2a\xa0\xca\x78\xca\xe4\xc0\xb9\x44\x20\x56\x29\xe6\x9d\x47\xca\xcd\x9a\xe4\xa5\xc8\x19\x02\x17\x90\x6b\xf7\x67\xd6\x48\x6c\xb3\xb5\x31\xd2\x68\x48\x52\x09\x39\xef\x2d\x72\x93\x7a\xa9\x66\xb7\x7e\xc5\x3d\x55\x07\xf3\x63\xaf\x63\x29\x94\x0a\x64\x99\xeb\x17\xde\x23\xdd\x1f\x94\x5c\x79\x49\xd2\x0d\x6e\x8c\x39\x21\x49\x0e\x2d\x76\x72\x44\x25\x81\x64\x59\xc5\x7a\xdb\x06\xf1\xe7\x92\x0a\xcc\x71\x7c\x5a\x34\xed\xb2\x5e\x9d\xdc\x8a\xb1\xaa\x9e\x1d\x58\xd6\xa8\xea\xfc\xac\xa3\x4a\x36\x57\x2b\x48\x78\x5e\x94\x4a\xeb\x47\x8f\x7b\x7b\xd2\x6e\x45\x10\xb7\x4a\x0a\x5e\xee\xad\x74\x30\x0b\x60\xb8\x0a\x65\x8c\x11\x98\x98\x42\x3b\x35\xb6\x87\x0b\x2b\xcc\x8b\x2a\x22\xd1\xaf\xa2\x56\x30\xac\x0a\x1f\xa7\x5a\x4e\x54\x72\x70\xc1\x53\xc2\x85\x40\x59\x70\x66\xa8\x9a\x9e\x37\xcd\x78\x3f\xaf\x09\x5e\xca\x2b\x2f\xcd\x5a\xe9\x07\xba\x3f\x54\x3a\x27\x02\xcd\x35\x6d\x47\x8d\xad\x4c\x39\x02\xf0\x7b\xe0\xaa\x75\x26\xf0\x0d\x03\xcc\x0b\x75\x6a\x59\x62\xcb\x2e\x14\x8a\xbc\x1a\xad\x97\x26\x58\xc3\x32\xeb\x9b\xb4\x63\xa1\x79\xa1\x17\x0a\xe5\xac\x16\x3e\x83\x4b\x63\x9a\x54\x3d\x97\x66\xea\xad\x79\x71\xe5\x1b\x8a\x6e\x37\x66\x87\x36\xcf\x1c\x30\x5e\xbd\x7d\x86\xa2\x63\x42\xcf\x04\xc9\x03\xf9\x08\xf1\xb0\xd5\x9d\x9a\x51\x64\xc9\x20\xd0\x18\xb6\xae\x1e\xec\x4c\x95\x98\x61\xa2\xf4\x5a\x80\x22\x5f\x01\x91\x92\x27\x54\x87\x60\x46\xa6\xb3\x24\x61\xc4\x24\xad\xf8\xe7\x04\xbd\x64\x90\x50\x4d\x81\x96\xa1\x87\x3c\x33\x18\xb2\xde\x86\xe9\x19\xda\x1d\x7a\xb0\x33\x6a\xda\xf6\x64\x68\x3c\x97\x6e\x27\x3f\x3f\x5a\x08\x9b\x2b\x93\xac\x4f\xb2\x0c\x34\x94\x69\xd0\x0e\xae\xd6\xb7\x76\xd1\x3a\x5e\x26\x94\x49\x17\xaa\xad\x80\xc0\x1d\x9e\xcc\x56\x28\x9c\x26\x83\x6a\x4f\x6a\x89\x0a\x34\x0b\x9b\xb1\x8c\x3b\x3c\x19\x1f\xe8\xf6\x4f\x81\x44\x97\x59\x86\x6d\x77\x38\x19\x20\x8d\xb5\x41\x50\x61\xf4\x68\xf8\x35\x83\x30\x1e\xda\xc9\x6a\x01\x59\x83\xe6\x64\x14\xcd\xbe\x66\xc1\x73\x33\xc1\xea\x78\xab\xc4\x7e\xf6\xb8\xbf\xaf\x37\x76\x56\xf1\xcf\xa5\x55\x9e\x9e\x5f\x07\x5a\x2c\x1a\xb7\xe2\xc6\xba\xcc\xf4\xaa\x76\xcb\x3f\x90\x8c\xa6\x35\x9b\x52\xaf\x2e\x8b\x68\xbe\x65\x2b\x78\xcf\x95\xfe\xe7\xcd\x2f\x54\x2a\xb9\x82\xd7\x1c\xe5\x7b\xae\xcc\xcf\x0d\x7c\xad\x96\xd9\xaa\x6e\xef\x02\x5c\x53\x6b\x58\xe7\x28\x66\x7c\xe3\xe3\x6b\xfd\x25\xd2\xec\x4b\xb4\x28\xdb\xfb\xf7\xe0\xf9\x63\xdb\x5b\x1b\x5c\xd4\x93\x93\x4a\xbd\xab\xe6\xa2\x12\xa9\x41\x62\x0c\xdd\x65\x06\x6e\x58\xcb\x4b\x69\x36\xec\x8c\xb3\xb5\x59\xcf\x37\xfd\xf7\x2d\x22\x4a\xa5\xd3\xb0\xe6\xaf\xad\xe3\x47\x62\x73\x9c\xc5\x25\xae\x53\xb7\xaf\x95\x66\xef\x5d\x87\xa9\xf6\x8b\x0e\xe4\x88\x40\x16\x91\x94\x94\xed\xb3\x3a\xb4\x5c\xc1\xfd\x81\x26\x07\xbb\xaf\xd9\xa2\x85\xa8\x0a\x81\x6a\x66\xe7\x31\x18\xbc\xd4\x6e\x59\x3f\xbd\x47\xa1\xb7\x09\xb4\xe2\xd3\x82\x6c\x19\x49\x16\x52\x4c\x4d\xb0\x6d\x01\x25\xa2\x70\x4f\x13\xc8\x51\xec\x11\x0a\xbd\x2e\x2f\x31\xcc\x45\x8b\xa0\x6d\x67\x4d\x42\xff\x16\x7f\xbc\x55\x5b\x8b\x50\xf6\xd6\xda\x6b\x06\xdf\xbb\x70\x66\x8c\x42\x38\xf3\x0f\x84\x8e\xd7\x04\x54\x0e\x33\xfe\x5f\x12\x4b\x99\x3d\x53\x8c\xa5\x62\x2c\xe5\x5a\x8c\xa5\x62\x2c\x15\x63\xa9\x18\x4b\x05\xb6\x18\x4b\x05\xb4\x18\x4b\x3d\x7a\x2c\xb5\x80\xb8\xc5\xc6\x16\x42\x75\x3f\x5a\x3c\xb3\x87\xcd\xd9\x00\xae\xca\xe4\x76\x20\xb8\x80\x11\xea\x10\xe8\xd6\xad\xc9\x1f\x0d\xf4\x47\x99\x21\x24\x08\xdb\x23\xbc\x5c\xbf\xfc\xec\xb3\x79\x4b\xdc\x71\x91\x13\x75\xad\x67\xc7\x1f\xfe\x31\x50\x4e\x6e\x26\x79\xef\x0e\xb3\x9d\x75\x0b\xfd\x9c\xb9\xd1\xca\xdd\x9f\x12\x0a\xd3\x62\x88\x61\x4c\x65\x28\x1e\x98\xfb\x72\x1e\xb7\x4e\x73\xb4\x63\xed\x26\x45\x55\xa5\xa1\xbc\x83\x75\xd9\x09\xa1\x17\x1d\x05\x39\x2a\x20\xaa\x03\x75\xd3\x1c\xeb\x84\xa6\x75\xa1\x8c\xfb\xe5\xb7\x6d\x12\x73\x29\x70\xe6\xb2\x1c\xda\xce\x36\x5e\xce\xbd\x44\x07\xa3\x72\x9c\x27\x48\x24\xea\x38\x69\x8b\x35\xf7\x3c\xd7\xdc\x52\xe6\x67\xd3\x39\x5f\x3d\x2c\xac\x34\x00\x97\xb8\xd9\x6f\x20\x2d\x0d\x49\xc2\xdc\x31\x84\x2b\x2b\x01\x79\x92\x0a\xf3\x99\xfc\xcc\xc9\xe4\xe9\xc8\xc9\xc8\x53\x89\x93\x26\x84\x47\x64\xaa\x24\x59\x76\x02\x3c\xd2\x44\xd5\xf2\x34\xa7\x25\xe8\xcc\xd0\x8d\xe4\x3c\x77\x84\x06\xf6\xfd\x99\x3e\xbb\x5e\xf4\xc2\x5a\x6b\xca\x9b\xc9\x1d\x9f\xd2\x34\xe7\x5d\x85\xde\x17\x98\x5b\x8d\xd5\x7d\xf7\xbd\x3f\xab\x04\xe1\x8b\x5b\x7f\x6f\x57\x66\x99\xd6\x85\x4d\x32\x0d\x59\x0d\xcc\x2e\x81\x91\x5c\x95\xe2\xb1\x99\xd6\xce\x7c\xb3\x39\x4d\x9b\x31\xbb\x79\xff\x7a\x7e\x38\x95\x10\x3e\xf2\x82\x67\x7c\x7f\x6a\xeb\xc4\x78\x15\x93\xc0\x72\xd4\x09\xc8\x72\x2b\x31\x64\xad\x72\xc9\xd5\xf7\x3d\x35\xc7\xfc\xcb\xb0\x45\xcc\x20\x8c\x64\xc4\x0c\x82\x5a\xc4\x0c\x22\x66\xe0\x69\x11\x33\x88\x98\x41\xc4\x0c\x22\x66\x30\xd1\x62\xfe\x25\xc6\x52\x13\x2d\xc6\x52\x41\x2d\xc6\x52\x31\x96\x8a\xb1\x54\x8c\xa5\x62\x2c\x35\xd6\xfe\xff\xc4\x52\x0b\x88\x87\x91\x0d\x11\xdd\x7a\x08\xac\xce\x66\x0d\xbc\x2c\xce\xde\x52\xf0\xf4\xcc\x52\xa0\x82\xa7\x9e\x4a\x20\x0b\x7e\x27\x7c\x9d\xf1\xc4\x56\xc8\x4e\x30\xa8\x67\x9e\x26\xe5\x32\x45\x92\xe4\x16\xdf\x5f\xc1\xaf\x9c\xe1\xca\x54\x53\xe8\xe9\x6a\x90\x78\xae\x0e\x28\xf4\xed\x97\xf2\x6a\xf2\xb4\x7b\xac\x24\x1a\x6f\xb1\x92\x28\x56\x12\x3d\x4d\x25\xd1\x81\x98\x39\x2c\xdd\xe2\x3c\x5d\x58\xd4\xf2\x36\xda\xb9\x7d\xee\x9f\x04\x4d\xcd\xd1\x6f\x55\x57\xa4\x0d\xd8\x19\x99\xa9\x15\x6f\x8c\xc5\x8e\x31\x75\x69\x74\x4c\x3f\x74\x47\x36\xb3\x62\xd8\x3d\xb1\x19\x00\x49\x53\x4c\xa1\x40\xb1\xb6\xa6\xc9\x61\x47\x59\x3a\x32\xae\x19\x92\x21\xd5\x59\x0b\x2a\x80\xba\xc3\x59\x98\x30\x6b\xe7\xf7\x3a\xcb\x44\xbf\x1e\x28\x60\xd5\xae\x35\xff\x29\xea\x81\xcc\x1e\xb7\x5a\x7e\xcf\x03\x50\xcc\x2e\xf9\xe7\x12\xc5\x09\xf8\x11\x45\xb3\xe7\xab\xcb\xf0\xfd\x73\xbe\x69\x66\x45\xa4\x12\x12\x22\xed\x92\x11\x16\x44\x2e\xc7\x06\xce\xcb\xc2\x41\x7f\xf0\x7d\x32\xf6\x5b\x01\x0e\x51\x5a\x10\x95\x5a\x11\x8e\x82\x4f\xc3\x94\xe9\x02\xba\x8b\x92\xaa\xb6\x2d\x0e\xc5\x47\xad\x61\x6c\x28\x4b\x37\x7f\xf3\xc0\xd4\x22\x8a\x15\x88\xe5\x05\xa7\x96\x52\x3c\x03\xc8\x82\x33\xc1\x2c\x58\x0e\x68\x41\x5f\x3d\x9a\x63\x17\x65\x74\xb1\xad\x85\x44\xa1\x83\x85\x9d\x89\x6f\xc1\xf9\xbb\xb8\xf3\x70\x2e\xe8\x8b\xa3\x36\x03\x31\x00\xbd\x16\x0b\xa4\x0d\x92\x4d\x03\x5f\x8b\xc9\x76\x80\xb2\x21\xf8\xb5\x18\xe9\xd2\xad\x83\x97\x7d\x2a\x85\x2d\xc7\xbf\xa0\xaf\x2e\x07\xae\x50\x03\x64\xf4\xd0\xb0\xc5\x42\xa8\xd4\x32\x83\x88\x9d\x35\x31\x86\x28\x50\x07\x15\x5b\x4c\x73\x84\xc7\x09\x64\xec\xf1\xd8\x75\xe8\xd8\xc7\xb9\x13\x70\x63\x6d\x00\x2b\x8d\x40\x45\x8b\x89\x9e\x09\x2d\xc1\x79\xf0\x12\x3c\xc4\xd6\xcf\x81\x99\xe0\x0c\xa8\x09\x16\xc2\x4d\x70\x0e\xe4\x04\xe7\xc0\x4e\x70\x96\x0c\x4c\x38\xf5\xae\xf5\x49\xb7\x90\xd6\xfe\x5e\xdb\x39\xab\xea\x59\x5a\x1e\x46\x81\x96\x6d\x1b\xb7\xe4\xa4\xd0\x9e\xe9\xaf\x3a\xe4\x30\x93\xeb\x6f\x4b\x62\x03\x42\x85\xd4\xdb\x08\x07\x03\xb7\xa8\x54\x88\x51\xeb\x85\x0b\x08\x6b\xae\xa8\x04\x6d\x63\x47\x92\x21\x53\xee\x90\xa6\xdb\x44\x6b\x8e\xfb\xf1\xec\x12\x7f\x72\x7f\xe0\xd2\x26\xf7\xec\x46\x9b\x4a\xb8\xb8\xc3\xd3\xc5\xea\x01\xf0\xfa\xc5\x5b\x76\x61\x83\xb6\x81\x9f\xaa\xa3\x41\xce\xb2\x25\xf6\x7f\x61\xa8\x5c\x8c\x9c\x44\x3c\x23\x58\x3e\x13\x8e\x0d\x7e\xc0\x7c\x3c\xaf\x20\x49\xa8\x45\x77\xcc\xb2\x79\xb8\x46\xcb\x2a\xb8\xa2\xe9\x0a\xc5\x9d\xab\x88\xf1\x76\x18\xf3\xc1\x65\x85\x7e\x90\xbd\xd6\x88\xba\xf2\x83\x1c\xad\xe1\x75\xce\x98\x9a\x6d\x53\x8e\x84\x49\xb8\xa8\x30\xd2\xe7\xb2\xe1\xf5\xe2\xf1\xf3\xe9\x8b\xe7\xfe\x32\x9f\xa6\xdc\x11\xd5\x6f\x42\xc3\xf6\x1e\x12\xe3\x70\x62\xf7\x71\xbe\x2d\x36\xe0\x72\x0a\x97\x15\xc2\xe0\xc7\x3f\x9a\xc6\x85\x39\x53\xdd\x21\xc1\x14\x5d\xd7\x74\x1a\xdc\x61\x16\xac\x6d\x5a\xa7\x78\xa2\x6b\x21\x15\xbc\x1d\x84\xd4\x36\xad\xb1\xcd\x15\xdc\x1f\x50\x74\x46\x4d\xa5\xfb\x00\x62\x0a\x44\x82\x28\x19\x0b\xf7\xda\x9c\x55\x70\xaf\x75\x55\xf6\x5b\x7e\x0e\xdc\xb2\xdb\x21\x23\x81\xf0\xf5\xb4\xa5\xdf\x16\x02\x48\x94\xfd\xc8\xa2\x3b\x35\xcd\x99\x9d\x74\x81\x34\xf5\x73\x15\x3a\x6b\x24\x89\xa9\x05\x1a\x69\x3d\xde\x0d\xbc\x31\x13\xa6\xf5\xfa\x50\x7c\x45\x1a\x1b\x20\x59\xc6\xef\x43\xfd\xdc\xa2\x39\x12\x1e\xc1\xac\x17\xb1\xff\xd4\xa5\x41\xf7\x4f\x50\x1a\xd4\x03\x14\x7f\xa7\x95\x41\x0b\x40\xde\x58\x1e\xd4\x6f\xb1\x3c\xc8\x53\x1e\x64\x3a\xad\xdf\xad\xea\x84\x66\x93\x23\xb6\x86\x68\x41\x9d\x90\x3f\x39\xd0\xaa\x21\x72\x22\xfc\xf1\x80\x66\x96\x0a\x34\x6a\xcb\xcb\x4c\xd1\xa2\x39\x8c\x21\x57\xb3\x44\x33\xbb\x31\xdf\xb9\x74\x66\x17\xc3\xd7\x5c\x92\xe4\xd0\x9f\x56\xb3\xa7\xa0\xcc\xa1\x0f\x69\x56\x83\x95\x4d\xef\x91\x2c\x73\x75\x40\xd5\x8e\xdd\xe6\x4c\xe9\xe3\xa6\x83\x5e\xbb\xcf\x0d\xd7\x70\x96\x59\x8b\x2e\xf5\x22\x9d\x69\x53\xd1\x0b\x69\xe5\x25\xe7\xce\x0c\x0c\x22\x04\x8b\x99\x1d\xb1\x4a\xc0\xed\xe9\x11\x59\x13\x00\x5c\xca\xab\xb9\xe0\xc6\x9d\xcb\x0b\x0b\x94\x5c\x08\x34\x43\x72\x26\x40\x1a\x0d\x4a\x66\x48\x0e\x43\x96\x80\x60\x64\x6e\x99\x73\xa1\x0a\x7c\xd1\x5a\x47\xbf\x7c\x70\x18\x62\x67\x65\x1d\x80\x34\x2a\xa7\x61\xe1\x56\x38\xb2\xbd\x30\xf1\xf4\x34\x49\xa7\x33\x12\x4e\x9f\xbc\xdc\xcb\x9b\x64\x0a\xb2\x95\xaa\x05\x26\x98\x16\x9c\xc9\x5c\xb0\x5f\x7e\xc8\x41\xe7\xe9\xa4\x52\x3c\xe9\x6c\xda\x43\x4e\x3a\x4f\x26\x85\x16\x27\xc4\x1e\x98\x10\xfa\x6d\x0e\x3c\x3f\x56\x12\xe8\x09\x12\x40\x01\xc9\x9f\xb3\x93\x39\xbf\xc5\x21\xe6\x47\x4b\xe0\x3c\x45\xf2\x26\x20\x71\x03\x6f\x97\x24\xf5\xe1\x49\x92\x36\x21\x09\x9b\xc5\x89\x07\x98\x49\xd6\xc4\x73\xbd\xbf\xe7\x73\xbd\x67\x24\x56\x1e\x92\x54\x59\xac\xc1\x27\x4a\xa6\x3c\x49\x22\xe5\x09\x93\x28\xc1\x09\x14\x9b\x16\x09\xc6\x13\xe7\x92\x27\x75\x4a\x24\x90\xe2\x43\x13\x27\x8b\x6c\x7d\xc1\xcd\x4b\x92\x25\x4f\x92\x28\x79\xfc\x24\xc9\x63\x27\x48\x82\xfd\xf1\xa2\x39\x1c\xee\x8b\x16\x25\x44\x9e\x2a\x19\xf2\xf8\x89\x90\x05\x49\x90\x76\x7a\x23\x80\x72\x58\x02\xa4\x41\x13\x82\x48\xce\x24\x3f\xc6\xd2\x1a\x41\xd6\x3f\x81\x38\x4c\xa6\x34\x42\xf6\xe7\xbe\xa4\xc7\xe2\x74\x46\xb0\x55\x87\xa2\xe3\xa1\x29\x8c\x47\x03\xbd\x83\x8a\x5b\x98\xa2\x0f\x29\x70\x69\xcf\x85\x89\x2a\x97\xc9\x31\x90\x23\xa7\x29\x14\xa5\x72\x47\xf5\x17\x54\xba\x4c\xd2\x8c\x15\x30\x5d\x95\xc4\x32\x98\xdf\x5d\x19\x4c\x5b\x7f\x5e\xaa\xed\x3a\x99\xf0\x5a\x98\xd9\xb4\x49\x95\xbd\x08\xae\x85\xf1\x67\x8b\xba\x75\x32\xc1\xb5\x30\x73\xb9\x98\x4e\x9d\x4c\x50\x2d\xcc\xec\xc0\x63\x9d\x4c\xac\x93\x79\xf8\x90\x21\xd6\xc9\xc4\x3a\x99\x5e\x8b\x75\x32\x4b\x28\xc6\x3a\x99\x58\x27\x63\x5b\xac\x93\xf1\xb7\x58\x27\x13\xeb\x64\x62\x9d\x8c\xbf\xc5\x3a\x99\x58\x27\x13\xeb\x64\x5a\x2d\xd6\xc9\xc4\x3a\x99\x58\x27\x13\xeb\x64\x62\x9d\x4c\xac\x93\x89\x75\x32\xb1\x4e\x66\x7c\x0c\x4f\x54\x27\xd3\x49\x4e\x8d\x17\xcb\x84\x67\xa7\x42\x8b\x65\xbc\x14\xab\x42\x9a\xa0\x62\x99\xe0\xdc\x8c\xbf\x0e\x68\xb2\x62\xc6\x9f\x4a\xa9\xab\x69\x96\x55\xcc\x78\x89\x8e\xfc\xd5\x9d\xc0\x8a\x99\xd9\x7c\xca\x39\x15\x33\xb3\x44\xcf\xa9\x98\xf1\x12\xd5\x7c\xc4\x8a\x99\x29\x9a\xb1\x62\x26\x56\xcc\xc4\x8a\x99\x10\xa2\xb1\x62\x26\x56\xcc\xb8\x16\x2b\x66\x62\xc5\x4c\xac\x98\xe9\xb6\x58\x31\x13\x2b\x66\x7c\x2d\x56\xcc\x3c\x15\xbc\x1a\x2b\x66\x4c\x8b\x15\x33\x0f\xbb\x39\x56\xcc\xcc\x52\x8c\x15\x33\xb1\x62\x26\x56\xcc\xfc\xdf\xad\x98\xf1\x76\x13\xc6\xb8\xb2\x5b\x94\xb1\x71\x85\x2f\xf9\x33\x62\xf4\x33\x51\x50\x89\xe2\x88\xa3\xfb\xb5\xb9\x9d\xef\xf6\x54\x10\x29\xcd\x3e\xca\x54\x0c\xfc\x88\xdb\x03\xe7\x77\xff\x21\xc8\xa4\x3b\xb1\xcc\x6c\x39\xcf\x90\xb0\xd1\x7b\x12\xe2\x7f\xd6\x63\x2e\xc8\xc8\x36\xc3\x6f\x4b\xd5\xe6\xe6\x7c\x4e\x2c\xb9\xc1\xf0\xce\x27\xb8\x17\xbc\x2c\x3e\x08\xca\x05\x55\xa7\x6f\x29\xa3\x79\x39\x79\xc2\x7d\x3e\x89\x74\x40\x92\xa9\x43\x72\xc0\x64\x92\xa5\x10\xe8\xc2\x8e\xd2\x3b\xb5\xe6\x47\x36\x3f\x45\xd7\xd5\x8b\xce\x9b\x49\x00\xa5\xc4\x6f\xca\x2d\xd6\x06\xfb\xd5\xcf\x29\xfb\x8a\x8b\x9b\xbb\xc9\xb1\xcd\xb3\x7d\x44\xa1\x43\xc2\x4a\x25\xe7\xea\xc2\x37\xf6\xb5\x6f\x96\x8c\xde\x9f\x8c\x9d\xa8\x5e\x8f\x1b\xb7\xe7\xce\xc1\x0b\x47\xef\x1d\x33\xc9\xd1\x1b\x5b\xd6\x36\xda\x3f\xad\x9e\xd1\xdb\x7b\x92\x5f\xea\xb6\x12\xad\xd2\xf3\x9c\x96\xc0\x3d\x95\x4a\xcc\x28\xdb\xe3\x65\x04\x16\x5c\x52\xc5\x1f\x40\x42\x91\xfd\x99\xcf\xfa\x4d\xad\x1a\xdb\x44\x67\xc5\xf7\x68\xb7\x22\x8b\x17\x8f\x44\x50\x45\x13\x92\xdd\xa4\xe9\x78\x66\xd7\x3f\x03\xad\x9d\xde\x30\x92\x9d\x14\x4d\x46\xd5\xe5\x27\x40\x73\xb2\xc7\x0f\x65\x96\x7d\xe0\x19\x4d\x46\xd5\xe1\x15\x67\xc6\xf7\xef\xf0\x88\xd9\xf4\x83\x53\x73\x3e\xe7\x4c\x4b\x92\xb2\x51\x3d\xce\x99\x20\xd9\x23\x9b\x3c\x1b\x31\x6b\x3c\x5b\x92\xdc\x95\xc5\xf9\x4e\x6f\x0e\xa1\x9d\xa7\x50\x08\x9e\xa3\x3a\x60\x39\xe9\x7a\x43\x16\x9e\x3a\xf2\x9e\x5f\x7a\xbc\x21\xe2\xfc\xca\x53\xbf\xe9\xdc\xb5\x47\xbb\x34\x9a\xe0\xb7\x56\xeb\x0f\x19\x74\x36\x0b\xfa\x2c\x87\x7a\x02\xc3\xe8\x80\xa0\x77\x5e\x94\x99\x0f\x9c\x99\x79\x83\xdf\x77\x99\x49\x31\xbe\x80\x1a\x83\x1f\xed\xf2\xc0\x7a\xeb\x96\x99\x8e\x76\x77\x95\xba\xd4\xf7\xb5\xff\xae\xe4\x6f\x17\xbe\xfb\xe6\x72\x5c\x08\x3f\xd9\x42\x58\x64\x44\xed\xf8\x78\xb9\xea\x9c\x1a\x78\x81\x4c\x1e\xe8\x6e\x66\x41\x98\xf6\xc7\x7e\x49\xd4\xe4\x17\x8f\xa9\x94\x87\x3d\x51\x78\x3f\xbe\x99\x8b\xd6\xf5\xc9\xac\x4b\x60\x91\xd1\x84\xbc\xe2\xe5\x78\xd4\xe0\x0f\x55\x9c\x9b\xbb\x49\x92\xa9\xe7\xe7\x54\x99\x98\xcf\x23\x9c\x1f\x2e\xe8\xe5\xf7\x49\xf4\x60\x19\x1b\xed\xd2\xef\x5c\x2a\x67\xc5\x33\xf3\xe9\x83\x09\x40\xa6\x7f\x3c\xb1\xc6\x10\xeb\x63\x83\xcf\x65\x9b\xc6\x18\xfe\xe5\x01\x7c\x07\xf5\xff\x05\x4f\xed\x61\x98\x8f\x35\x4d\x93\x81\x51\x8a\x98\x2f\x00\x28\x5e\xbd\x6d\x12\x0f\x24\xec\x04\x8a\x50\xa6\xdc\xa7\x29\x5a\xdf\x4e\x50\xc2\x9c\xa3\xfb\xa2\x4e\xc2\xac\x70\xb7\xc3\x44\x7d\x09\xa5\x74\xd0\xe9\x04\xd1\x1a\x5d\xad\x53\x20\x5f\x54\xff\xfb\x72\x1c\xf3\x9b\x0f\x8c\xec\xbb\xa7\xc3\x9c\x8e\x70\xde\x98\x9b\x81\xb2\x94\x26\xf5\xd9\x0e\x3b\x4c\x4b\x47\x8b\xc6\x70\xe9\x40\x4a\x4f\x50\x64\xe1\x7b\x73\xb3\x3d\xc2\xd7\x22\x23\xdd\xf1\xc3\x96\xa2\x1d\xb4\x39\xff\xe7\xe1\x89\x40\x78\xcf\xdd\x69\x58\x5c\xc1\x07\xf3\x35\x85\xe6\x8a\xc9\x03\xbd\xe7\xf6\x5c\x2c\x4e\x43\xa5\x01\xb1\x9d\xf7\xac\x49\x47\x70\xdf\x34\x27\x4b\xec\x38\xdb\x27\x4b\x5a\xa6\x5b\xe5\x49\x7c\xc1\x24\xaf\x00\xe0\x71\x09\xde\xe1\xa9\x39\x0f\xe0\x4e\xb4\x98\xac\x89\x0f\x65\xaf\x0d\xaa\xca\xa1\xdb\x04\xfd\xe7\xee\x4c\x18\xcf\xb7\x94\x59\x06\xed\x4b\x2b\x35\xfb\xf4\x90\x65\x75\xaa\x8d\xa5\xe6\xa7\x61\xed\x21\x02\x9f\x3f\xe2\xd2\x91\xfa\x77\xd3\x07\x5a\x06\x87\x54\xfc\x27\x7c\xcc\x40\xdc\xc1\x95\xde\x61\x94\xd6\x09\x94\x37\x3f\x97\x24\xdb\xc0\x6b\xdc\x91\x32\x53\x5a\x4a\x1e\x92\xee\x66\xf7\xf8\x20\x93\x7a\x4f\xb3\x34\x21\x22\x35\x1f\xba\xb1\x6e\x02\x24\x9f\x2b\x56\xb7\x87\x16\x13\xc2\x6a\x07\xd5\x58\x86\xfd\x9e\x09\x14\x44\x28\x9a\x94\x19\x11\xa0\xe7\xf0\x9e\x0b\x4f\x45\x6e\x80\x4e\x1a\xe3\xbd\xc5\x84\xb3\xd4\xb3\x65\xea\x3a\xda\xfe\x73\x6d\x2d\x19\xb7\x8e\x82\xba\x13\x98\xd4\xf3\x19\x29\xe8\x4f\xa1\x4b\xf7\xb9\x1a\x67\xc9\x7c\x57\xf9\xa6\x7a\xd2\xaf\xec\xb7\xa7\xee\xa9\xf4\x93\xad\x4f\x7f\x53\x09\xd4\x1e\xaa\xbf\x6a\x3c\x7f\x33\x9b\x37\xf0\xa7\x13\xa4\x56\xeb\xbe\x59\x46\x55\x95\xa8\x91\xa8\x56\xd5\x67\x75\xdc\x84\x72\xea\x6a\x5c\xc4\x8e\x0b\x3c\xa2\x80\xcb\xd4\x67\x46\x9a\x9a\x39\xe3\x7d\xb5\x81\xff\x44\xc1\x8d\x21\x32\xdc\xdb\xe3\xc4\x6e\x02\x9a\x83\xf3\x5b\xbd\xf4\xa0\xc9\x9d\x11\x9f\x83\xf9\x0c\x2e\xed\x9f\x59\xa0\x79\x8e\x29\x25\x0a\xb3\xd3\x95\x3d\x0e\x5f\x1d\x3b\x9f\x36\x98\x56\xbd\xc6\x1f\xff\x69\xc6\xac\xfc\x75\x1a\x86\xf5\x40\x5b\xfa\xc1\xe4\xf0\x3a\x0e\xd6\xa6\xf5\x7a\xa6\x31\x9f\xc3\xd3\xde\x75\xb2\xdc\x7c\xd5\x9c\x1f\x68\x65\x5f\xe7\x9d\x6b\x65\x6c\xf0\x17\x6d\x93\x44\x47\xb1\x66\xfe\xd9\x79\xf5\x80\xd9\x17\x94\x04\x1b\xcb\xa2\x4d\x45\x77\xeb\xf6\xee\x99\xa7\xb7\x98\x94\x82\xaa\x93\x41\xf9\x86\xcb\xd2\xba\x9d\x49\x1b\xf6\x55\x80\xf4\xa0\xc7\x61\xc8\xc3\xeb\x6d\x54\x73\xd0\xdb\x03\x2d\x07\xfd\x3d\x4c\x72\xd0\x5f\x61\x8e\x83\x8e\x06\x52\x1c\x74\xb5\xb1\x86\x41\xe7\x04\x04\xb2\xae\x37\xa5\xc3\x8e\x66\x67\x37\xe8\x6b\xef\x35\x06\x9d\xdd\xad\x44\xaf\x7b\xc2\x0a\xc6\x74\xbc\x1e\xc6\x4f\x23\x4f\xf7\x2e\xb9\x8c\xc1\x35\x1c\x5f\x92\xac\x38\x90\x97\xcd\x35\xe3\xec\x6d\xcc\xdf\xe9\xb6\x9b\x1f\x4c\xaf\x41\x89\xd2\x3a\x59\xa9\xb8\x20\x7b\x74\x57\xfe\x27\x00\x00\xff\xff\xb1\xdb\x6e\x5b\x4f\xc0\x00\x00")

func installerStashAppscodeCom_stashoperatorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_installerStashAppscodeCom_stashoperatorsYaml,
		"installer.stash.appscode.com_stashoperators.yaml",
	)
}

func installerStashAppscodeCom_stashoperatorsYaml() (*asset, error) {
	bytes, err := installerStashAppscodeCom_stashoperatorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installer.stash.appscode.com_stashoperators.yaml", size: 49231, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"installer.stash.appscode.com_stashoperators.yaml": installerStashAppscodeCom_stashoperatorsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"installer.stash.appscode.com_stashoperators.yaml": {installerStashAppscodeCom_stashoperatorsYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

/*
Copyright The Stash Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package stash.appscode.dev.installer.apis.installer.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message Container {
  optional ImageRef imageRef = 1;

  // Compute Resources required by the sidecar container.
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 2;

  // Security options the pod should run with.
  // +optional
  optional k8s.io.api.core.v1.SecurityContext securityContext = 3;
}

message HealthcheckSpec {
  // +optional
  optional bool enabled = 1;
}

message ImageRef {
  optional string registry = 1;

  optional string repository = 2;

  optional string tag = 3;
}

message Monitoring {
  optional string agent = 1;

  // +optional
  optional bool backup = 2;

  // +optional
  optional bool operator = 3;

  optional PrometheusSpec prometheus = 4;

  optional ServiceMonitorLabels serviceMonitor = 5;
}

message Platform {
  // +optional
  optional bool openshift = 1;
}

message PrometheusSpec {
  // +optional
  optional string namespace = 1;
}

message ServiceAccountSpec {
  optional bool create = 1;

  // +optional
  optional string name = 2;

  // +optional
  map<string, string> annotations = 3;
}

message ServiceMonitorLabels {
  // +optional
  map<string, string> labels = 1;
}

message ServingCerts {
  optional bool generate = 1;

  // +optional
  optional string caCrt = 2;

  // +optional
  optional string serverCrt = 3;

  // +optional
  optional string serverKey = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=stashoperators,singular=stashoperator,categories={stash,appscode}
message StashOperator {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StashOperatorSpec spec = 2;
}

// StashOperatorList is a list of StashOperators
message StashOperatorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StashOperator CRD objects
  repeated StashOperator items = 2;
}

// StashOperatorSpec is the schema for Stash operator values file
message StashOperatorSpec {
  // +optional
  optional string nameOverride = 1;

  // +optional
  optional string fullnameOverride = 2;

  optional int32 replicaCount = 3;

  optional Container operator = 4;

  optional Container pushgateway = 5;

  optional ImageRef cleaner = 6;

  optional string imagePullPolicy = 7;

  // +optional
  repeated string imagePullSecrets = 8;

  // +optional
  optional bool criticalAddon = 9;

  // +optional
  optional int32 logLevel = 10;

  // +optional
  map<string, string> annotations = 11;

  // +optional
  map<string, string> podAnnotations = 12;

  // +optional
  map<string, string> nodeSelector = 13;

  // If specified, the pod's tolerations.
  // +optional
  repeated k8s.io.api.core.v1.Toleration tolerations = 14;

  // If specified, the pod's scheduling constraints
  // +optional
  optional k8s.io.api.core.v1.Affinity affinity = 15;

  // PodSecurityContext holds pod-level security attributes and common container settings.
  // Optional: Defaults to empty.  See type description for default values of each field.
  // +optional
  optional k8s.io.api.core.v1.PodSecurityContext podSecurityContext = 16;

  optional ServiceAccountSpec serviceAccount = 17;

  optional WebHookSpec apiserver = 18;

  // +optional
  optional bool enableAnalytics = 19;

  optional Monitoring monitoring = 20;

  // +optional
  repeated string additionalPodSecurityPolicies = 21;

  // +optional
  optional Platform platform = 22;
}

message WebHookSpec {
  optional int32 groupPriorityMinimum = 1;

  optional int32 versionPriority = 2;

  optional bool enableMutatingWebhook = 3;

  optional bool enableValidatingWebhook = 4;

  optional string ca = 5;

  // +optional
  optional bool bypassValidatingWebhookXray = 6;

  optional bool useKubeapiserverFqdnForAks = 7;

  optional HealthcheckSpec healthcheck = 8;

  optional ServingCerts servingCerts = 9;
}


name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Prepare Host
        run: |
          sudo apt-get -qq update || true
          sudo apt-get install -y bzr
          # install yq
          curl -fsSL -o yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yq
          sudo mv yq /usr/local/bin/yq
          # install kubectl
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Run checks
        run: |
          make ci

  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        k8s: [v1.14.10, v1.15.12, v1.16.15, v1.17.17, v1.18.15, v1.19.7, v1.20.2]
    steps:
      - uses: actions/checkout@v1

      - name: Install yq
        run: |
          curl -fsSL -o yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yq
          sudo mv yq /usr/local/bin/yq

      - name: Generate Test Parameters
        id: params
        run: |
          rnd=$(head /dev/urandom | tr -dc a-z0-9 | head -c 10 ; echo '')
          echo ::set-output name=namespace::stash-enterprise-$rnd

      - name: Create Kubernetes ${{ matrix.k8s }} cluster
        id: kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.10.0
          config: hack/kubernetes/kind.yaml
          image: kindest/node:${{ matrix.k8s }}

      - name: Prepare cluster for testing
        id: local-path
        env:
          USERNAME: 1gtm
          REGISTRY_SECRET: regcred
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          echo "install helm 3"
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          echo
          echo "create docker-registry secret"
          kubectl create ns ${{ steps.params.outputs.namespace }} || true

      - name: Issue License
        env:
          BYTEBUILDERS_LICENSE_TOKEN: ${{ secrets.BYTEBUILDERS_LICENSE_TOKEN }}
        run: |
          export KUBECONFIG="${HOME}/.kube/config"
          CLUSTER_UID=$(kubectl get ns kube-system -o=jsonpath='{.metadata.uid}')
          LICENSE_KEY=$(curl -X POST -d "name=1gtm&email=1gtm@appscode.com&product=stash-enterprise&cluster=${CLUSTER_UID}&tos=true&token=${BYTEBUILDERS_LICENSE_TOKEN}" https://license-issuer.appscode.com/issue-license)
          # ref: https://github.com/mikefarah/yq/issues/230#issuecomment-487458629
          yq w -i ./charts/stash-enterprise/ci/ci-values.yaml license --tag '!!str' -- "${LICENSE_KEY}"

      - name: Test charts
        run: |
          export KUBECONFIG="${HOME}/.kube/config"
          ./hack/scripts/ct.sh
